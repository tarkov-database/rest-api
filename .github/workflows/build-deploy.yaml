name: Build & Deploy
on: release
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Login to Registry
        if: github.event.action == 'published' # temporary workaround
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | \
          docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Check out code into the Go module directory
        if: github.event.action == 'published' # temporary workaround
        uses: actions/checkout@v1

      - name: Build image
        if: github.event.action == 'published' # temporary workaround
        run: |
          export IMAGE_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/tags\/v//g")
          docker build -t tarkovdatabase/rest-api:${IMAGE_TAG} .

      - name: Publish image
        if: github.event.action == 'published' # temporary workaround
        run: docker push tarkovdatabase/rest-api

      - name: Logout
        if: github.event.action == 'published' # temporary workaround
        run: docker logout

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Set up config
        if: github.event.action == 'published' # temporary workaround
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          mkdir -p ${HOME}/.kube
          export KUBECONFIG=${HOME}/.kube/config
          echo $KUBE_CONFIG | base64 -d > $KUBECONFIG

      - name: Deploy image
        if: github.event.action == 'published' # temporary workaround
        run: |
          export IMAGE_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/tags\/v//g")
          kubectl set image deployment/rest-api rest-api=tarkovdatabase/rest-api:${IMAGE_TAG}
